{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\REACT\\\\react-components\\\\src\\\\components\\\\FinishedQuiz\\\\FinishedQuiz.js\";\nimport React from 'react';\nimport classes from './FinishedQuiz.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FinishedQuiz = props => {\n  const successCount = Object.keys(props.results).reduce((total, key) => {\n    if (props.results[key] === 'success') {\n      total++;\n    }\n\n    return total;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.FinishedQuiz,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.quiz.map((quizItem, index) => {\n        const cls = ['fa', props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check', classes[props.results[quizItem.id]]];\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), \".\\xA0\", quizItem.question, /*#__PURE__*/_jsxDEV(\"i\", {\n            className: cls.join(' ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E \", successCount, \" \\u0438\\u0437 \", props.quiz.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onRetry,\n        type: \"\",\n        children: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FinishedQuiz;\nexport default FinishedQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"FinishedQuiz\");","map":{"version":3,"sources":["C:/Users/User/Desktop/REACT/react-components/src/components/FinishedQuiz/FinishedQuiz.js"],"names":["React","classes","Button","FinishedQuiz","props","successCount","Object","keys","results","reduce","total","key","quiz","map","quizItem","index","cls","id","question","join","length","onRetry"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,OAAlB,EAA2BC,MAA3B,CAAkC,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACrE,QAAIP,KAAK,CAACI,OAAN,CAAcG,GAAd,MAAuB,SAA3B,EAAsC;AACpCD,MAAAA,KAAK;AACN;;AACD,WAAOA,KAAP;AACD,GALoB,EAKlB,CALkB,CAArB;AAOA,sBACE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACE,YAAxB;AAAA,4BACE;AAAA,gBACGC,KAAK,CAACQ,IAAN,CAAWC,GAAX,CAAe,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACnC,cAAMC,GAAG,GAAG,CACV,IADU,EAEVZ,KAAK,CAACI,OAAN,CAAcM,QAAQ,CAACG,EAAvB,MAA+B,OAA/B,GAAyC,UAAzC,GAAsD,UAF5C,EAGVhB,OAAO,CAACG,KAAK,CAACI,OAAN,CAAcM,QAAQ,CAACG,EAAvB,CAAD,CAHG,CAAZ;AAMA,4BACE;AAAA,kCAGE;AAAA,sBAASF,KAAK,GAAG;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAHF,WAIGD,QAAQ,CAACI,QAJZ,eAKE;AAAG,YAAA,SAAS,EAAEF,GAAG,CAACG,IAAJ,CAAS,GAAT;AAAd;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA,WACOJ,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAhBA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAqBE;AAAA,4EAAcV,YAAd,oBAAiCD,KAAK,CAACQ,IAAN,CAAWQ,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,eAuBE;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEhB,KAAK,CAACiB,OAAvB;AAAgC,QAAA,IAAI,EAAC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CArCD;;KAAMlB,Y;AAuCN,eAAeA,YAAf","sourcesContent":["import React from 'react'\r\nimport classes from './FinishedQuiz.module.css'\r\nimport Button from '../UI/Button/Button'\r\n\r\nconst FinishedQuiz = props => {\r\n  const successCount = Object.keys(props.results).reduce((total, key) => {\r\n    if (props.results[key] === 'success') {\r\n      total++\r\n    }\r\n    return total\r\n  }, 0)\r\n\r\n  return (\r\n    <div className={classes.FinishedQuiz}>\r\n      <ul>\r\n        {props.quiz.map((quizItem, index) => {\r\n          const cls = [\r\n            'fa',\r\n            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n            classes[props.results[quizItem.id]]\r\n          ]\r\n\r\n          return (\r\n            <li\r\n              key={index}\r\n            >\r\n              <strong>{index + 1}</strong>.&nbsp;\r\n              {quizItem.question}\r\n              <i className={cls.join(' ')} />\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n\r\n      <p>Правильно {successCount } из {props.quiz.length}</p>\r\n\r\n      <div>\r\n        <Button onClick={props.onRetry} type=\"\">Повторить</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FinishedQuiz"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\REACT\\\\react-components\\\\src\\\\containers\\\\Auth\\\\Auth.js\";\nimport React, { Component } from 'react';\nimport classes from './Auth.module.css';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport is from 'is_js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formControls: {\n        email: {\n          value: '',\n          type: 'email',\n          label: 'Email',\n          errorMessage: 'Введите корректный email',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            email: true\n          }\n        },\n        password: {\n          value: '',\n          type: 'password',\n          label: 'Password',\n          errorMessage: 'Введите корректный пароль',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n        }\n      }\n    };\n\n    this.loginHandler = () => {};\n\n    this.registerHandler = async () => {\n      const authData = {\n        email: this.state.formControls\n      };\n      axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCXXfrcS1XspMGv6KYnQjeQP5hm1trgJ0s');\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.onChangeHandler = (event, controlName) => {\n      const formControls = { ...this.state.formControls\n      };\n      const control = { ...formControls[controlName]\n      };\n      control.value = event.target.value;\n      control.touched = true;\n      control.valid = this.validateControl(control.value, control.validation);\n      formControls[controlName] = control;\n      let isFormValid = true;\n      Object.keys(formControls).forEach(name => {\n        isFormValid = formControls[name].valid && isFormValid;\n      });\n      this.setState({\n        formControls,\n        isFormValid\n      });\n    };\n  }\n\n  validateControl(value, validation) {\n    if (!validation) {\n      return true;\n    }\n\n    let isValid = true;\n\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (validation.email) {\n      isValid = is.email(value) && isValid;\n    }\n\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid;\n    }\n\n    return isValid;\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/_jsxDEV(Input, {\n        type: control.type,\n        value: control.value,\n        valid: control.valid,\n        touched: control.touched,\n        label: control.label,\n        shouldValidate: !!control.validation,\n        errorMessage: control.errorMessage,\n        onChange: event => this.onChangeHandler(event, controlName)\n      }, controlName + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Auth,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.submitHandler,\n          className: classes.AuthForm,\n          children: [this.renderInputs(), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"success\",\n            onClick: this.loginHandler,\n            disabled: !this.state.isFormValid,\n            children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: this.registerHandler,\n            disabled: !this.state.isFormValid,\n            children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/REACT/react-components/src/containers/Auth/Auth.js"],"names":["React","Component","classes","Button","Input","is","axios","Auth","state","formControls","email","value","type","label","errorMessage","valid","touched","validation","required","password","minLength","loginHandler","registerHandler","authData","post","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isFormValid","Object","keys","forEach","name","setState","isValid","trim","length","renderInputs","map","index","render","AuthForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport classes from './Auth.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport is from 'is_js'\r\nimport axios from 'axios'\r\n\r\nexport default class Auth extends Component {\r\n\r\n  state = {\r\n    formControls: {\r\n      email: {\r\n        value: '',\r\n        type: 'email',\r\n        label: 'Email',\r\n        errorMessage: 'Введите корректный email',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true,\r\n        }\r\n      },\r\n      password: {\r\n        value: '',\r\n        type: 'password',\r\n        label: 'Password',\r\n        errorMessage: 'Введите корректный пароль',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loginHandler = () => {\r\n\r\n  }\r\n\r\n  registerHandler = async () => {\r\n    const authData = {\r\n      email: this.state.formControls\r\n    }\r\n    axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCXXfrcS1XspMGv6KYnQjeQP5hm1trgJ0s')\r\n  }\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  validateControl(value, validation) {\r\n    if (!validation) {\r\n      return true\r\n    }\r\n\r\n    let isValid = true\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid\r\n    }\r\n\r\n    if (validation.email) {\r\n      isValid = is.email(value) && isValid\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid\r\n    }\r\n\r\n    return isValid\r\n  }\r\n\r\n  onChangeHandler = (event, controlName) => {\r\n    const formControls = { ...this.state.formControls }\r\n    const control = { ...formControls[controlName] }\r\n\r\n    control.value = event.target.value\r\n    control.touched = true\r\n    control.valid = this.validateControl(control.value, control.validation)\r\n\r\n    formControls[controlName] = control\r\n\r\n    let isFormValid = true\r\n\r\n    Object.keys(formControls).forEach(name => {\r\n      isFormValid = formControls[name].valid && isFormValid\r\n    })\r\n\r\n    this.setState({\r\n      formControls, isFormValid\r\n    })\r\n  }\r\n\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n      return (\r\n        <Input\r\n          key={controlName + index}\r\n          type={control.type}\r\n          value={control.value}\r\n          valid={control.valid}\r\n          touched={control.touched}\r\n          label={control.label}\r\n          shouldValidate={!!control.validation}\r\n          errorMessage={control.errorMessage}\r\n          onChange={event => this.onChangeHandler(event, controlName)}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Auth}>\r\n        <div>\r\n          <h1>Авторизация</h1>\r\n\r\n          <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n\r\n            {this.renderInputs()}\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.loginHandler}\r\n              disabled={!this.state.isFormValid}\r\n              >\r\n              Войти\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.registerHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Регистрация\r\n            </Button>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\REACT\\\\react-components\\\\src\\\\containers\\\\QuizCreator\\\\QuizCreator.js\";\nimport React, { Component } from 'react';\nimport classes from './QuizCreator.module.css';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport Select from '../../components/UI/Select/Select';\nimport { createControl, validate, validateForm } from '../../form/formFramework';\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createOptionControl(number) {\n  return createControl({\n    label: `Вариант ${number}`,\n    errorMessage: 'Значение не может быть пустым',\n    id: number\n  }, {\n    required: true\n  });\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl({\n      label: 'Введите вопрос',\n      errorMessage: 'Вопрос не может быть пустым'\n    }, {\n      required: true\n    }),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4)\n  };\n}\n\nexport default class QuizCreator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quiz: [],\n      isFormValid: false,\n      rightAnswerId: 1,\n      formControls: createFormControls()\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.addQuestionHandler = event => {\n      event.preventDefault();\n      const quiz = this.state.quiz.concat();\n      const index = quiz.length + 1;\n      const {\n        question,\n        option1,\n        option2,\n        option3,\n        option4\n      } = this.state.formControls;\n      const questionItem = {\n        question: question.value,\n        id: index,\n        rightAnswerId: this.state.rightAnswerId,\n        answers: [{\n          text: option1.value,\n          id: option1.id\n        }, {\n          text: option2.value,\n          id: option2.id\n        }, {\n          text: option3.value,\n          id: option3.id\n        }, {\n          text: option4.value,\n          id: option4.id\n        }]\n      };\n      quiz.push(questionItem);\n      this.setState({\n        quiz,\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n      });\n    };\n\n    this.createQuizHandler = async event => {\n      event.preventDefault();\n\n      try {\n        const response = await axios.post('https://react-quiz-b527d-default-rtdb.europe-west1.firebasedatabase.app/quizes.json', this.state.quiz);\n        this.setState({\n          quiz: [],\n          isFormValid: false,\n          rightAnswerId: 1,\n          formControls: createFormControls()\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.changeHandler = (value, controlName) => {\n      const formControls = { ...this.state.formControls\n      };\n      const control = { ...formControls[controlName]\n      };\n      control.touched = true;\n      control.value = value;\n      control.valid = validate(control.value, control.validation);\n      formControls[controlName] = control;\n      this.setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n    };\n\n    this.selectChangeHandler = event => {\n      this.setState({\n        rightAnswerId: +event.target.value\n      });\n    };\n  }\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/_jsxDEV(Auxiliary, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: control.label,\n          value: control.value,\n          valid: control.valid,\n          shouldValidate: !!control.valid,\n          touched: control.touched,\n          errorMessage: control.errorMessage,\n          onChange: event => this.changeHandler(event.target.value, controlName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), index === 0 ? /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 26\n        }, this) : null]\n      }, controlName + index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    const select = /*#__PURE__*/_jsxDEV(Select, {\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\",\n      value: this.state.rightAnswerId,\n      onChange: this.selectChangeHandler,\n      options: [{\n        text: 1,\n        value: 1\n      }, {\n        text: 2,\n        value: 2\n      }, {\n        text: 3,\n        value: 3\n      }, {\n        text: 4,\n        value: 4\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 20\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.QuizCreator,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.submitHandler,\n          children: [this.renderControls(), select, /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: this.addQuestionHandler,\n            disabled: !this.state.isFormValid,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"success\",\n            onClick: this.createQuizHandler,\n            disabled: this.state.quiz.length === 0,\n            children: \"C\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/REACT/react-components/src/containers/QuizCreator/QuizCreator.js"],"names":["React","Component","classes","Button","Input","Select","createControl","validate","validateForm","Auxiliary","axios","createOptionControl","number","label","errorMessage","id","required","createFormControls","question","option1","option2","option3","option4","QuizCreator","state","quiz","isFormValid","rightAnswerId","formControls","submitHandler","event","preventDefault","addQuestionHandler","concat","index","length","questionItem","value","answers","text","push","setState","createQuizHandler","response","post","error","console","log","changeHandler","controlName","control","touched","valid","validation","selectChangeHandler","target","renderControls","Object","keys","map","render","select"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Select from '../../components/UI/Select/Select'\r\nimport { createControl, validate, validateForm } from '../../form/formFramework'\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\r\nimport axios from 'axios'\r\n\r\nfunction createOptionControl(number) {\r\n  return createControl({\r\n    label: `Вариант ${number}`,\r\n    errorMessage: 'Значение не может быть пустым',\r\n    id: number\r\n  }, { required: true })\r\n}\r\n\r\nfunction createFormControls() {\r\n  return {\r\n    question: createControl({\r\n      label: 'Введите вопрос',\r\n      errorMessage: 'Вопрос не может быть пустым'\r\n    }, { required: true }),\r\n    option1: createOptionControl(1),\r\n    option2: createOptionControl(2),\r\n    option3: createOptionControl(3),\r\n    option4: createOptionControl(4),\r\n  }\r\n}\r\n\r\nexport default class QuizCreator extends Component {\r\n\r\n  state = {\r\n    quiz: [],\r\n    isFormValid: false,\r\n    rightAnswerId: 1,\r\n    formControls: createFormControls()\r\n  }\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  addQuestionHandler = event => {\r\n    event.preventDefault()\r\n\r\n    const quiz = this.state.quiz.concat()\r\n    const index = quiz.length + 1\r\n\r\n    const { question, option1, option2, option3, option4 } = this.state.formControls\r\n\r\n    const questionItem = {\r\n      question: question.value,\r\n      id: index,\r\n      rightAnswerId: this.state.rightAnswerId,\r\n      answers: [\r\n        { text: option1.value, id: option1.id },\r\n        { text: option2.value, id: option2.id },\r\n        { text: option3.value, id: option3.id },\r\n        { text: option4.value, id: option4.id }\r\n      ]\r\n    }\r\n    quiz.push(questionItem)\r\n\r\n    this.setState({\r\n      quiz,\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n  }\r\n\r\n  createQuizHandler = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const response = await axios.post('https://react-quiz-b527d-default-rtdb.europe-west1.firebasedatabase.app/quizes.json', this.state.quiz)\r\n\r\n      this.setState({\r\n        quiz: [],\r\n        isFormValid: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormControls()\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  changeHandler = (value, controlName) => {\r\n    const formControls = { ...this.state.formControls }\r\n    const control = { ...formControls[controlName] }\r\n\r\n    control.touched = true\r\n    control.value = value\r\n    control.valid = validate(control.value, control.validation)\r\n\r\n    formControls[controlName] = control\r\n\r\n    this.setState({\r\n      formControls,\r\n      isFormValid: validateForm(formControls)\r\n    })\r\n  }\r\n\r\n  renderControls() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n\r\n      return (\r\n        <Auxiliary key={controlName + index}>\r\n          <Input\r\n            label={control.label}\r\n            value={control.value}\r\n            valid={control.valid}\r\n            shouldValidate={!!control.valid}\r\n            touched={control.touched}\r\n            errorMessage={control.errorMessage}\r\n            onChange={event => this.changeHandler(event.target.value, controlName)}\r\n          />\r\n          {index === 0 ? <hr /> : null}\r\n        </Auxiliary>\r\n      )\r\n    })\r\n  }\r\n\r\n  selectChangeHandler = event => {\r\n    this.setState({\r\n      rightAnswerId: +event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const select = <Select\r\n      label=\"Выберите правильный ответ\"\r\n      value={this.state.rightAnswerId}\r\n      onChange={this.selectChangeHandler}\r\n      options={[\r\n        { text: 1, value: 1 },\r\n        { text: 2, value: 2 },\r\n        { text: 3, value: 3 },\r\n        { text: 4, value: 4 }\r\n      ]}\r\n    />\r\n    return (\r\n      <div className={classes.QuizCreator}>\r\n        <div>\r\n          <h1>Создание теста</h1>\r\n\r\n          <form onSubmit={this.submitHandler}>\r\n\r\n            {this.renderControls()}\r\n\r\n            {select}\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.addQuestionHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Добавить вопрос\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.createQuizHandler}\r\n              disabled={this.state.quiz.length === 0}\r\n            >\r\n              Cоздать тест\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\REACT\\\\react-components\\\\src\\\\containers\\\\Quiz\\\\Quiz.js\";\nimport React, { Component } from 'react';\nimport classes from './Quiz.module.css';\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\nimport axios from '../../axios/axios-quiz';\nimport Loader from '../../components/UI/Loader/Loader';\nimport { fetchQuizById } from '../../store/actions/quiz';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAnswerClickHandler = answerId => {\n      if (this.state.answerState) {\n        const key = Object.keys(this.state.answerState)[0];\n\n        if (this.state.answerState[key] === 'success') {\n          return;\n        }\n      }\n\n      const question = this.state.quiz[this.state.activeQuestion];\n      const results = this.state.results;\n\n      if (question.rightAnswerId === answerId) {\n        if (!results[question.id]) {\n          results[question.id] = 'success';\n        }\n\n        this.setState({\n          answerState: {\n            [answerId]: 'success'\n          },\n          results\n        });\n        const timeout = window.setTimeout(() => {\n          if (this.isQuizFinished()) {\n            this.setState({\n              isFinished: true\n            });\n          } else {\n            this.setState({\n              activeQuestion: this.state.activeQuestion + 1,\n              answerState: null\n            });\n          }\n\n          window.clearTimeout(timeout);\n        }, 1000);\n      } else {\n        results[question.id] = 'error';\n        this.setState({\n          answerState: {\n            [answerId]: 'error'\n          },\n          results\n        });\n      }\n    };\n\n    this.retryHandler = () => {\n      this.setState({\n        activeQuestion: 0,\n        answerState: null,\n        isFinished: false,\n        results: {}\n      });\n    };\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length;\n  }\n\n  componentDidMount() {\n    this.props.fetchQuizById(this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Quiz,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.QuizWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u041F\\u044F\\u0442\\u043D\\u0438\\u0447\\u043D\\u044B\\u0439 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), this.props.loading && this.props.quiz ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this) : this.props.isFinished ? /*#__PURE__*/_jsxDEV(FinishedQuiz, {\n          results: this.props.results,\n          quiz: this.props.quiz,\n          onRetry: this.retryHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(ActiveQuiz, {\n          answers: this.props.quiz[this.props.activeQuestion].answers,\n          question: this.props.quiz[this.props.activeQuestion].question,\n          onAnswerClick: this.onAnswerClickHandler,\n          quizLength: this.props.quiz.length,\n          answerNumber: this.state.activeQuestion + 1,\n          state: this.state.answerState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    results: state.quiz.results,\n    isFinished: state.quiz.isFinished,\n    activeQuestion: state.quiz.activeQuestion,\n    answerState: state.quiz.answerState,\n    quiz: state.quiz.quiz,\n    loading: state.quiz.loading\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchQuizById: id => dispatch(fetchQuizById())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);","map":{"version":3,"sources":["C:/Users/User/Desktop/REACT/react-components/src/containers/Quiz/Quiz.js"],"names":["React","Component","classes","ActiveQuiz","FinishedQuiz","axios","Loader","fetchQuizById","connect","Quiz","onAnswerClickHandler","answerId","state","answerState","key","Object","keys","question","quiz","activeQuestion","results","rightAnswerId","id","setState","timeout","window","setTimeout","isQuizFinished","isFinished","clearTimeout","retryHandler","length","componentDidMount","props","match","params","render","QuizWrapper","loading","answers","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\r\nimport axios from '../../axios/axios-quiz'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport {fetchQuizById} from '../../store/actions/quiz'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Quiz extends Component {\r\n\r\n  onAnswerClickHandler = answerId => {\r\n    if (this.state.answerState) {\r\n      const key = Object.keys(this.state.answerState)[0]\r\n      if (this.state.answerState[key] === 'success') {\r\n        return\r\n      }\r\n    }\r\n\r\n    const question = this.state.quiz[this.state.activeQuestion]\r\n    const results = this.state.results\r\n\r\n    if (question.rightAnswerId === answerId) {\r\n      if (!results[question.id]) {\r\n        results[question.id] = 'success'\r\n      }\r\n\r\n      this.setState({\r\n        answerState: { [answerId]: 'success'},\r\n        results\r\n      })\r\n\r\n      const timeout = window.setTimeout(() => {\r\n        if (this.isQuizFinished()) {\r\n          this.setState({\r\n            isFinished: true\r\n          })\r\n        } else {\r\n          this.setState({\r\n            activeQuestion: this.state.activeQuestion + 1,\r\n            answerState: null\r\n          })\r\n        }\r\n\r\n        window.clearTimeout(timeout)\r\n      }, 1000)\r\n    } else {\r\n      results[question.id] = 'error'\r\n      this.setState({\r\n        answerState: { [answerId]: 'error' },\r\n        results\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  isQuizFinished() {\r\n    return this.state.activeQuestion + 1 === this.state.quiz.length\r\n  }\r\n\r\n  retryHandler = () => {\r\n    this.setState({\r\n      activeQuestion: 0,\r\n      answerState: null,\r\n      isFinished: false,\r\n      results: {}\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchQuizById(this.props.match.params.id)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Quiz}>\r\n\r\n        <div className={classes.QuizWrapper}>\r\n          <h1>Пятничный опросник</h1>\r\n\r\n          {\r\n            this.props.loading && this.props.quiz\r\n              ? <Loader />\r\n              : this.props.isFinished\r\n              ? <FinishedQuiz\r\n                results={this.props.results}\r\n                quiz={this.props.quiz}\r\n                onRetry={this.retryHandler}\r\n\r\n              />\r\n              : <ActiveQuiz\r\n                answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                question={this.props.quiz[this.props.activeQuestion].question}\r\n                onAnswerClick={this.onAnswerClickHandler}\r\n                quizLength={this.props.quiz.length}\r\n                answerNumber={this.state.activeQuestion + 1}\r\n                state={this.state.answerState}\r\n              />\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    results: state.quiz.results,\r\n    isFinished: state.quiz.isFinished,\r\n    activeQuestion: state.quiz.activeQuestion,\r\n    answerState: state.quiz.answerState,\r\n    quiz: state.quiz.quiz,\r\n    loading: state.quiz.loading\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchQuizById: id => dispatch(fetchQuizById())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\REACT\\\\react-components\\\\src\\\\containers\\\\QuizCreator\\\\QuizCreator.js\";\nimport React, { Component } from 'react';\nimport classes from './QuizCreator.module.css';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport { createControl } from '../../form/formFramework';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createOptionControl(number) {\n  return createControl({\n    label: `Вариант ${number}`,\n    errorMessage: 'Значение не может быть пустым',\n    id: number\n  }, {\n    required: true\n  });\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl({\n      label: 'Введите вопрос',\n      errorMessage: 'Вопрос не может быть пустым'\n    }, {\n      required: true\n    }),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4)\n  };\n}\n\nexport default class QuizCreator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quiz: [],\n      formControls: createFormControls()\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.addQuestionHandler = () => {};\n\n    this.createQuizHandler = () => {};\n\n    this.changeHandler = (value, controlName) => {};\n  }\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/_jsxDEV(Input, {\n        label: control.label,\n        value: control.value,\n        valid: control.valid,\n        shouldValidate: !!control.valid,\n        touched: control.touched,\n        errorMessage: control.errorMessage,\n        onChange: event => this.changeHandler(event.target.value, controlName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.QuizCreator,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.submitHandler,\n          children: [this.renderControls(), /*#__PURE__*/_jsxDEV(\"select\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: this.addQuestionHandler,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"success\",\n            onClick: this.createQuizHandler,\n            children: \"C\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/REACT/react-components/src/containers/QuizCreator/QuizCreator.js"],"names":["React","Component","classes","Button","Input","createControl","createOptionControl","number","label","errorMessage","id","required","createFormControls","question","option1","option2","option3","option4","QuizCreator","state","quiz","formControls","submitHandler","event","preventDefault","addQuestionHandler","createQuizHandler","changeHandler","value","controlName","renderControls","Object","keys","map","index","control","valid","touched","target","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport { createControl } from '../../form/formFramework'\r\n\r\nfunction createOptionControl(number) {\r\n  return createControl({\r\n    label: `Вариант ${number}`,\r\n    errorMessage: 'Значение не может быть пустым',\r\n    id: number\r\n  }, { required: true })\r\n}\r\n\r\nfunction createFormControls() {\r\n  return {\r\n    question: createControl({\r\n      label: 'Введите вопрос',\r\n      errorMessage: 'Вопрос не может быть пустым'\r\n    }, { required: true }),\r\n    option1: createOptionControl(1),\r\n    option2: createOptionControl(2),\r\n    option3: createOptionControl(3),\r\n    option4: createOptionControl(4),\r\n  }\r\n}\r\n\r\nexport default class QuizCreator extends Component {\r\n\r\n  state = {\r\n    quiz: [],\r\n    formControls: createFormControls()\r\n  }\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  addQuestionHandler = () => {\r\n\r\n  }\r\n\r\n  createQuizHandler = () => {\r\n\r\n  }\r\n\r\n  changeHandler = (value, controlName) => {\r\n\r\n  }\r\n\r\n  renderControls() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n\r\n      return (\r\n        <Input\r\n          label={control.label}\r\n          value={control.value}\r\n          valid={control.valid}\r\n          shouldValidate={!!control.valid}\r\n          touched={control.touched}\r\n          errorMessage={control.errorMessage}\r\n          onChange={event => this.changeHandler(event.target.value, controlName)}\r\n        />\r\n        \r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.QuizCreator}>\r\n        <div>\r\n          <h1>Создание теста</h1>\r\n\r\n          <form onSubmit={this.submitHandler}>\r\n\r\n            {this.renderControls()}\r\n\r\n            <select></select>\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.addQuestionHandler}\r\n            >\r\n              Добавить вопрос\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.createQuizHandler}\r\n            >\r\n              Cоздать тест\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
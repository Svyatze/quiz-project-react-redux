{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\REACT\\\\react-components\\\\src\\\\containers\\\\Quiz\\\\Quiz.js\";\nimport React, { Component } from 'react';\nimport classes from './Quiz.module.css';\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\nimport axios from '../../axios/axios-quiz';\nimport Loader from '../../components/UI/Loader/Loader';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      results: {},\n      isFinished: false,\n      activeQuestion: 0,\n      answerState: null,\n      quiz: [],\n      loading: true\n    };\n\n    this.onAnswerClickHandler = answerId => {\n      if (this.state.answerState) {\n        const key = Object.keys(this.state.answerState)[0];\n\n        if (this.state.answerState[key] === 'success') {\n          return;\n        }\n      }\n\n      const question = this.state.quiz[this.state.activeQuestion];\n      const results = this.state.results;\n\n      if (question.rightAnswerId === answerId) {\n        if (!results[question.id]) {\n          results[question.id] = 'success';\n        }\n\n        this.setState({\n          answerState: {\n            [answerId]: 'success'\n          },\n          results\n        });\n        const timeout = window.setTimeout(() => {\n          if (this.isQuizFinished()) {\n            this.setState({\n              isFinished: true\n            });\n          } else {\n            this.setState({\n              activeQuestion: this.state.activeQuestion + 1,\n              answerState: null\n            });\n          }\n\n          window.clearTimeout(timeout);\n        }, 1000);\n      } else {\n        results[question.id] = 'error';\n        this.setState({\n          answerState: {\n            [answerId]: 'error'\n          },\n          results\n        });\n      }\n    };\n\n    this.retryHandler = () => {\n      this.setState({\n        activeQuestion: 0,\n        answerState: null,\n        isFinished: false,\n        results: {}\n      });\n    };\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length;\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await axios.get(`/quizes/${this.props.match.params.id}.json`);\n      const quiz = response.data;\n      this.setState({\n        quiz,\n        loading: false\n      });\n    } catch (e) {\n      console.log(e);\n    }\n\n    console.log('Quiz Id =');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Quiz,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.QuizWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u041F\\u044F\\u0442\\u043D\\u0438\\u0447\\u043D\\u044B\\u0439 \\u043E\\u043F\\u0440\\u043E\\u0441\\u043D\\u0438\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), this.state.loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this) : this.state.isFinished ? /*#__PURE__*/_jsxDEV(FinishedQuiz, {\n          results: this.state.results,\n          quiz: this.state.quiz,\n          onRetry: this.retryHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(ActiveQuiz, {\n          answers: this.state.quiz[this.state.activeQuestion].answers,\n          question: this.state.quiz[this.state.activeQuestion].question,\n          onAnswerClick: this.onAnswerClickHandler,\n          quizLength: this.state.quiz.length,\n          answerNumber: this.state.activeQuestion + 1,\n          state: this.state.answerState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {}\n\nexport default connect()(Quiz);","map":{"version":3,"sources":["C:/Users/User/Desktop/REACT/react-components/src/containers/Quiz/Quiz.js"],"names":["React","Component","classes","ActiveQuiz","FinishedQuiz","axios","Loader","connect","Quiz","state","results","isFinished","activeQuestion","answerState","quiz","loading","onAnswerClickHandler","answerId","key","Object","keys","question","rightAnswerId","id","setState","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","length","componentDidMount","response","get","props","match","params","data","e","console","log","render","QuizWrapper","answers","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\r\nimport axios from '../../axios/axios-quiz'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Quiz extends Component {\r\n  state = {\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    quiz: [],\r\n    loading: true\r\n  }\r\n\r\n  onAnswerClickHandler = answerId => {\r\n    if (this.state.answerState) {\r\n      const key = Object.keys(this.state.answerState)[0]\r\n      if (this.state.answerState[key] === 'success') {\r\n        return\r\n      }\r\n    }\r\n\r\n    const question = this.state.quiz[this.state.activeQuestion]\r\n    const results = this.state.results\r\n\r\n    if (question.rightAnswerId === answerId) {\r\n      if (!results[question.id]) {\r\n        results[question.id] = 'success'\r\n      }\r\n\r\n      this.setState({\r\n        answerState: { [answerId]: 'success'},\r\n        results\r\n      })\r\n\r\n      const timeout = window.setTimeout(() => {\r\n        if (this.isQuizFinished()) {\r\n          this.setState({\r\n            isFinished: true\r\n          })\r\n        } else {\r\n          this.setState({\r\n            activeQuestion: this.state.activeQuestion + 1,\r\n            answerState: null\r\n          })\r\n        }\r\n\r\n        window.clearTimeout(timeout)\r\n      }, 1000)\r\n    } else {\r\n      results[question.id] = 'error'\r\n      this.setState({\r\n        answerState: { [answerId]: 'error' },\r\n        results\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  isQuizFinished() {\r\n    return this.state.activeQuestion + 1 === this.state.quiz.length\r\n  }\r\n\r\n  retryHandler = () => {\r\n    this.setState({\r\n      activeQuestion: 0,\r\n      answerState: null,\r\n      isFinished: false,\r\n      results: {}\r\n    })\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await axios.get(`/quizes/${this.props.match.params.id}.json`)\r\n      const quiz = response.data\r\n      \r\n      this.setState({\r\n        quiz,\r\n        loading: false\r\n      })\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n    console.log('Quiz Id =', )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Quiz}>\r\n\r\n        <div className={classes.QuizWrapper}>\r\n          <h1>Пятничный опросник</h1>\r\n\r\n          {\r\n            this.state.loading\r\n              ? <Loader />\r\n              : this.state.isFinished\r\n              ? <FinishedQuiz\r\n                results={this.state.results}\r\n                quiz={this.state.quiz}\r\n                onRetry={this.retryHandler}\r\n\r\n              />\r\n              : <ActiveQuiz\r\n                answers={this.state.quiz[this.state.activeQuestion].answers}\r\n                question={this.state.quiz[this.state.activeQuestion].question}\r\n                onAnswerClick={this.onAnswerClickHandler}\r\n                quizLength={this.state.quiz.length}\r\n                answerNumber={this.state.activeQuestion + 1}\r\n                state={this.state.answerState}\r\n              />\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  \r\n}\r\n\r\nexport default connect()(Quiz)"]},"metadata":{},"sourceType":"module"}